input CreateAccountInput {
    name: String!
    email: String @rules(apply: ["required", "email", "unique:cart_users,email"])
    password: String!
    token: String
}

type CreateAccountPayload {
    token: String
    user: User
}

input SetSessionInput {
    products: [ CartProductInput ! ]
}

input CartProductInput {
    id: ID!
    quantity: Int!
}

type SetSessionPayload {
    cart_uuid : String
    products: [ CartProduct ]
}

type CartProduct {
    id: ID!
    quantity: Int!
}

extend type Mutation {
    logIn(input: LoginInput! @spread) : LogInPayload @field(resolver: "Lab19\\Cart\\Module\\Users\\GraphQL\\Mutations\\Account@logIn")
    logOut : LogOutPayload @field(resolver: "Lab19\\Cart\\Module\\Users\\GraphQL\\Mutations\\Account@logOut")
}

input LoginInput {
    email: String!
    password: String!
}

type LogInPayload {
    user: User
    token: String
}

type LogOutPayload {
    success: Boolean!
}
