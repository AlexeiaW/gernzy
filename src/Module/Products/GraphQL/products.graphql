extend type Query {
    products(input:ProductsQueryInput): [Product!]!
        @paginate(
            type: "paginator",
            model: "Lab19\\Cart\\Module\\Products\\Product",
            scopes: ["published", "inStock"],
            builder: "Lab19\\Cart\\Module\\Products\\GraphQL\\Builders\\ProductsBuilder@search"
        )
}

input ProductsQueryInput {
    keyword: String
}

type Product {
    id: ID!
    title: String!
    status: String!
    published: Int!
    created_at: DateTime!
    updated_at: DateTime!
}

extend type Mutation {
    createProduct(input:CreateProductInput!): Product
        @field(resolver: "Lab19\\Cart\\Module\\Products\\GraphQL\\Mutations\\CreateProduct@create")
        @can(
            ability: "create",
            model: "Lab19\\Cart\\Module\\Products\\Product",
            policy: "Lab19\\Cart\\Module\\Products\\Policies\\ProductPolicy"
        )
}

input CreateProductInput {
    title: String!
}
